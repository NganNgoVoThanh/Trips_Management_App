version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_OPENAI_API_KEY: ${NEXT_PUBLIC_OPENAI_API_KEY}
        NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:50001}
        NEXT_PUBLIC_COMPANY_DOMAIN: ${NEXT_PUBLIC_COMPANY_DOMAIN:-@intersnack.com.vn}
    container_name: trips_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: ${DB_HOST:-vnicc-lxdb001vh.isrk.local}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_TIMEZONE: ${DB_TIMEZONE:-+07:00}
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
      NEXT_PUBLIC_OPENAI_API_KEY: ${NEXT_PUBLIC_OPENAI_API_KEY}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:50001}
      NEXT_PUBLIC_COMPANY_DOMAIN: ${NEXT_PUBLIC_COMPANY_DOMAIN:-@intersnack.com.vn}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:50001}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    ports:
      - "50001:50001"
    networks:
      - trips_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:50001/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  trips_network:
    driver: bridge