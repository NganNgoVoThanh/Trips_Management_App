version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: trips_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_NAME:-trips_management}
      MYSQL_USER: ${DB_USER:-trips_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-trips_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - trips_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: trips_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USER:-trips_user}
      PMA_PASSWORD: ${DB_PASSWORD:-trips_password}
    ports:
      - "8080:80"
    networks:
      - trips_network
    depends_on:
      mysql:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trips_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-trips_user}
      DB_PASSWORD: ${DB_PASSWORD:-trips_password}
      DB_NAME: ${DB_NAME:-trips_management}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    networks:
      - trips_network
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./public:/app/public

volumes:
  mysql_data:
    driver: local

networks:
  trips_network:
    driver: bridge